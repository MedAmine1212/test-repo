<?php

namespace ContainerXeEa38U;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_PdfqFB9Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.pdfqFB9' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.pdfqFB9'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\TestsController::action' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController::add' => ['privates', '.service_locator.M.t6hMj', 'get_ServiceLocator_M_T6hMjService', true],
            'App\\Controller\\TestsController::delete' => ['privates', '.service_locator..l7u2Le', 'get_ServiceLocator__L7u2LeService', true],
            'App\\Controller\\TestsController::getAll' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController::getAllUser' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController::getTestById' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController::testQuestions' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController::update' => ['privates', '.service_locator.v_7Kktc', 'get_ServiceLocator_V7KktcService', true],
            'App\\Controller\\TestsQsController::add' => ['privates', '.service_locator.7WFzSkd', 'get_ServiceLocator_7WFzSkdService', true],
            'App\\Controller\\TestsQsController::delete' => ['privates', '.service_locator.KQ9CXi_', 'get_ServiceLocator_KQ9CXiService', true],
            'App\\Controller\\TestsQsController::getAll' => ['privates', '.service_locator.11AyntU', 'get_ServiceLocator_11AyntUService', true],
            'App\\Controller\\TestsQsController::update' => ['privates', '.service_locator.v_7Kktc', 'get_ServiceLocator_V7KktcService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\TestsController:action' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController:add' => ['privates', '.service_locator.M.t6hMj', 'get_ServiceLocator_M_T6hMjService', true],
            'App\\Controller\\TestsController:delete' => ['privates', '.service_locator..l7u2Le', 'get_ServiceLocator__L7u2LeService', true],
            'App\\Controller\\TestsController:getAll' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController:getAllUser' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController:getTestById' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController:testQuestions' => ['privates', '.service_locator.SkCPuRG', 'get_ServiceLocator_SkCPuRGService', true],
            'App\\Controller\\TestsController:update' => ['privates', '.service_locator.v_7Kktc', 'get_ServiceLocator_V7KktcService', true],
            'App\\Controller\\TestsQsController:add' => ['privates', '.service_locator.7WFzSkd', 'get_ServiceLocator_7WFzSkdService', true],
            'App\\Controller\\TestsQsController:delete' => ['privates', '.service_locator.KQ9CXi_', 'get_ServiceLocator_KQ9CXiService', true],
            'App\\Controller\\TestsQsController:getAll' => ['privates', '.service_locator.11AyntU', 'get_ServiceLocator_11AyntUService', true],
            'App\\Controller\\TestsQsController:update' => ['privates', '.service_locator.v_7Kktc', 'get_ServiceLocator_V7KktcService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\TestsController::action' => '?',
            'App\\Controller\\TestsController::add' => '?',
            'App\\Controller\\TestsController::delete' => '?',
            'App\\Controller\\TestsController::getAll' => '?',
            'App\\Controller\\TestsController::getAllUser' => '?',
            'App\\Controller\\TestsController::getTestById' => '?',
            'App\\Controller\\TestsController::testQuestions' => '?',
            'App\\Controller\\TestsController::update' => '?',
            'App\\Controller\\TestsQsController::add' => '?',
            'App\\Controller\\TestsQsController::delete' => '?',
            'App\\Controller\\TestsQsController::getAll' => '?',
            'App\\Controller\\TestsQsController::update' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\TestsController:action' => '?',
            'App\\Controller\\TestsController:add' => '?',
            'App\\Controller\\TestsController:delete' => '?',
            'App\\Controller\\TestsController:getAll' => '?',
            'App\\Controller\\TestsController:getAllUser' => '?',
            'App\\Controller\\TestsController:getTestById' => '?',
            'App\\Controller\\TestsController:testQuestions' => '?',
            'App\\Controller\\TestsController:update' => '?',
            'App\\Controller\\TestsQsController:add' => '?',
            'App\\Controller\\TestsQsController:delete' => '?',
            'App\\Controller\\TestsQsController:getAll' => '?',
            'App\\Controller\\TestsQsController:update' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
